import React from 'react';
import { Eye, EyeOff, GripVertical } from 'lucide-react';

interface MobileMenuItem {
  id: string;
  label: string;
  icon: string;
  required: boolean;
}

interface MobileMenuSettingsProps {
  mobileMenuItems: Record<string, boolean>;
  onUpdateItems: (updates: Record<string, boolean>) => void;
}

const MOBILE_MENU_ITEMS: MobileMenuItem[] = [
  { id: 'dashboard', label: '–ì–ª–∞–≤–Ω–∞—è', icon: 'üè†', required: true },
  { id: 'transactions', label: '–û–ø–µ—Ä–∞—Ü–∏–∏', icon: 'üí≥', required: false },
  { id: 'analytics', label: '–û—Ç—á—ë—Ç—ã', icon: 'üìä', required: false },
  { id: 'budget', label: '–ë—é–¥–∂–µ—Ç', icon: 'üéØ', required: false },
  { id: 'goals', label: '–¶–µ–ª–∏', icon: 'üèÜ', required: false },
  { id: 'calendar', label: '–ö–∞–ª–µ–Ω–¥–∞—Ä—å', icon: 'üìÖ', required: false },
  { id: 'categories', label: '–ö–∞—Ç–µ–≥–æ—Ä–∏–∏', icon: 'üè∑Ô∏è', required: false },
  { id: 'filters', label: '–§–∏–ª—å—Ç—Ä—ã', icon: 'üîç', required: false },
  { id: 'recurring', label: '–†–µ–≥—É–ª—è—Ä–Ω—ã–µ', icon: 'üîÑ', required: false },
  { id: 'calculator', label: '–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä', icon: 'üßÆ', required: false },
  { id: 'import-export', label: '–ò–º–ø–æ—Ä—Ç/–≠–∫—Å–ø–æ—Ä—Ç', icon: 'üì§', required: false },
  { id: 'faq', label: '–ß–∞–í–æ', icon: '‚ùì', required: false },
  { id: 'settings', label: '–ï—â—ë', icon: '‚öôÔ∏è', required: true },
];

export function MobileMenuSettings({ mobileMenuItems, onUpdateItems }: MobileMenuSettingsProps) {
  const getVisibleItemsCount = () => {
    return Object.values(mobileMenuItems).filter(Boolean).length;
  };

  const getHiddenItemsCount = () => {
    return MOBILE_MENU_ITEMS.length - getVisibleItemsCount();
  };

  const handleItemToggle = (itemId: string, checked: boolean) => {
    onUpdateItems({ [itemId]: checked });
  };

  const getRecommendedItemsCount = () => {
    return 5; // –û–ø—Ç–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–ª—è –º–æ–±–∏–ª—å–Ω–æ–≥–æ –º–µ–Ω—é
  };

  const isOptimalCount = () => {
    const visibleCount = getVisibleItemsCount();
    return visibleCount >= 3 && visibleCount <= 5;
  };

  return (
    <div className="space-y-6">
      {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ */}
      <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
        <div className="p-4 bg-blue-50 dark:bg-blue-900/20 rounded-xl">
          <div className="text-sm text-blue-800 dark:text-blue-200">
            <strong>–í–∏–¥–∏–º—ã—Ö –∫–Ω–æ–ø–æ–∫:</strong> {getVisibleItemsCount()} –∏–∑ {MOBILE_MENU_ITEMS.length}
          </div>
          <div className="text-xs text-blue-700 dark:text-blue-300 mt-1">
            –í—ã–±–µ—Ä–∏—Ç–µ, –∫–∞–∫–∏–µ –∫–Ω–æ–ø–∫–∏ –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å –≤ –Ω–∏–∂–Ω–µ–º –º–µ–Ω—é
          </div>
        </div>

        <div className={`p-4 rounded-xl ${
          isOptimalCount() 
            ? 'bg-green-50 dark:bg-green-900/20' 
            : 'bg-orange-50 dark:bg-orange-900/20'
        }`}>
          <div className={`text-sm ${
            isOptimalCount() 
              ? 'text-green-800 dark:text-green-200' 
              : 'text-orange-800 dark:text-orange-200'
          }`}>
            <strong>–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è:</strong> {getRecommendedItemsCount()} –∫–Ω–æ–ø–æ–∫
          </div>
          <div className={`text-xs mt-1 ${
            isOptimalCount() 
              ? 'text-green-700 dark:text-green-300' 
              : 'text-orange-700 dark:text-orange-300'
          }`}>
            {isOptimalCount() 
              ? '–û–ø—Ç–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–Ω–æ–ø–æ–∫' 
              : '–°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∏–ª–∏ –º–∞–ª–æ –∫–Ω–æ–ø–æ–∫ –º–æ–∂–µ—Ç —É—Ö—É–¥—à–∏—Ç—å UX'
            }
          </div>
        </div>
      </div>

      {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∫—Ä—ã—Ç—ã—Ö –∫–Ω–æ–ø–∫–∞—Ö */}
      {getHiddenItemsCount() > 0 && (
        <div className="p-3 bg-slate-50 dark:bg-slate-800 rounded-xl border border-slate-200 dark:border-slate-700">
          <div className="text-sm text-slate-700 dark:text-slate-300">
            <strong>–°–∫—Ä—ã—Ç–æ –∫–Ω–æ–ø–æ–∫:</strong> {getHiddenItemsCount()}
          </div>
          <div className="text-xs text-slate-600 dark:text-slate-400 mt-1">
            –°–∫—Ä—ã—Ç—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–æ—Å—Ç—É–ø–Ω—ã —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫—É "–ï—â—ë" –≤ –º–æ–±–∏–ª—å–Ω–æ–º –º–µ–Ω—é
          </div>
        </div>
      )}

      {/* –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–Ω–æ–ø–æ–∫ */}
      <div className="grid grid-cols-1 md:grid-cols-2 gap-3">
        {MOBILE_MENU_ITEMS.map(item => (
          <label 
            key={item.id} 
            className={`
              flex items-center justify-between p-4 rounded-xl transition-all duration-200 cursor-pointer
              ${mobileMenuItems[item.id]
                ? 'bg-green-50 dark:bg-green-900/20 border-2 border-green-200 dark:border-green-800'
                : 'bg-slate-50 dark:bg-slate-800 border-2 border-transparent hover:bg-slate-100 dark:hover:bg-slate-700'
              }
              ${item.required ? 'opacity-75' : ''}
            `}
          >
            <div className="flex items-center gap-3">
              <span className="text-lg">{item.icon}</span>
              <div>
                <div className="font-medium text-slate-900 dark:text-slate-100">
                  {item.label}
                </div>
                {item.required && (
                  <div className="text-xs text-slate-500 dark:text-slate-400">
                    –û–±—è–∑–∞—Ç–µ–ª—å–Ω–∞—è –∫–Ω–æ–ø–∫–∞
                  </div>
                )}
              </div>
            </div>
            
            <div className="flex items-center gap-2">
              {mobileMenuItems[item.id] ? (
                <Eye className="text-green-600 dark:text-green-400" size={16} />
              ) : (
                <EyeOff className="text-slate-400" size={16} />
              )}
              
              <input
                type="checkbox"
                checked={mobileMenuItems[item.id]}
                onChange={(e) => {
                  if (!item.required) {
                    handleItemToggle(item.id, e.target.checked);
                  }
                }}
                disabled={item.required}
                className="rounded"
              />
            </div>
          </label>
        ))}
      </div>

      {/* –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä */}
      <div className="p-4 bg-slate-50 dark:bg-slate-800 rounded-xl">
        <h4 className="font-semibold text-slate-900 dark:text-slate-100 mb-3">
          –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä –º–æ–±–∏–ª—å–Ω–æ–≥–æ –º–µ–Ω—é
        </h4>
        
        <div className="bg-white dark:bg-slate-900 rounded-2xl p-3 border border-slate-200 dark:border-slate-700">
          <div className="flex items-center justify-around">
            {MOBILE_MENU_ITEMS
              .filter(item => mobileMenuItems[item.id])
              .slice(0, 5) // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–∞–∫—Å–∏–º—É–º 5 –∫–Ω–æ–ø–æ–∫
              .map((item, index) => (
                <div key={item.id} className="flex flex-col items-center gap-1 p-2">
                  <span className="text-lg">{item.icon}</span>
                  <span className="text-xs font-medium text-slate-700 dark:text-slate-300 truncate max-w-[60px]">
                    {item.label}
                  </span>
                  {index === 0 && (
                    <div className="w-1 h-1 bg-blue-600 dark:bg-blue-400 rounded-full" />
                  )}
                </div>
              ))}
          </div>
        </div>
        
        <div className="text-xs text-slate-500 dark:text-slate-400 mt-2 text-center">
          –¢–∞–∫ –±—É–¥–µ—Ç –≤—ã–≥–ª—è–¥–µ—Ç—å –Ω–∏–∂–Ω–µ–µ –º–µ–Ω—é –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö
        </div>
      </div>

      {/* –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ UX */}
      <div className="p-4 bg-blue-50 dark:bg-blue-900/20 rounded-xl">
        <h4 className="font-semibold text-blue-800 dark:text-blue-200 mb-3">
          üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –º–æ–±–∏–ª—å–Ω–æ–º—É UX
        </h4>
        <ul className="text-sm text-blue-700 dark:text-blue-300 space-y-1">
          <li>‚Ä¢ <strong>3-5 –∫–Ω–æ–ø–æ–∫</strong> - –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞</li>
          <li>‚Ä¢ <strong>–ì–ª–∞–≤–Ω–∞—è –∏ –ï—â—ë</strong> - –≤—Å–µ–≥–¥–∞ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –≤–∏–¥–Ω—ã</li>
          <li>‚Ä¢ <strong>–ß–∞—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ</strong> - —Ä–∞–∑–º–µ—â–∞–π—Ç–µ –≤ —Ü–µ–Ω—Ç—Ä–µ</li>
          <li>‚Ä¢ <strong>–°–∫—Ä—ã—Ç—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏</strong> - –¥–æ—Å—Ç—É–ø–Ω—ã —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫—É "–ï—â—ë"</li>
        </ul>
      </div>

      {/* –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è */}
      {getVisibleItemsCount() > 5 && (
        <div className="p-3 bg-orange-50 dark:bg-orange-900/20 rounded-xl">
          <div className="text-sm text-orange-800 dark:text-orange-200">
            <strong>–í–Ω–∏–º–∞–Ω–∏–µ:</strong> –°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∫–Ω–æ–ø–æ–∫ –≤ –º–æ–±–∏–ª—å–Ω–æ–º –º–µ–Ω—é –º–æ–∂–µ—Ç —É—Ö—É–¥—à–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –æ–ø—ã—Ç. 
            –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –æ—Å—Ç–∞–≤–∏—Ç—å –Ω–µ –±–æ–ª–µ–µ 5 –∫–Ω–æ–ø–æ–∫.
          </div>
        </div>
      )}

      {getVisibleItemsCount() < 3 && (
        <div className="p-3 bg-yellow-50 dark:bg-yellow-900/20 rounded-xl">
          <div className="text-sm text-yellow-800 dark:text-yellow-200">
            <strong>–°–æ–≤–µ—Ç:</strong> –°–ª–∏—à–∫–æ–º –º–∞–ª–æ –∫–Ω–æ–ø–æ–∫ –º–æ–∂–µ—Ç –∑–∞—Ç—Ä—É–¥–Ω–∏—Ç—å –Ω–∞–≤–∏–≥–∞—Ü–∏—é. 
            –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –¥–æ–±–∞–≤–∏—Ç—å –µ—â—ë –Ω–µ—Å–∫–æ–ª—å–∫–æ —á–∞—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π.
          </div>
        </div>
      )}

      <div className="p-3 bg-blue-50 dark:bg-blue-900/20 rounded-xl">
        <div className="text-sm text-blue-800 dark:text-blue-200">
          <strong>–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ:</strong> –ö–Ω–æ–ø–∫–∏ "–ì–ª–∞–≤–Ω–∞—è" –∏ "–ï—â—ë" –≤—Å–µ–≥–¥–∞ –≤–∏–¥–∏–º—ã –∏ –Ω–µ –º–æ–≥—É—Ç –±—ã—Ç—å —Å–∫—Ä—ã—Ç—ã. 
          –ß–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫—É "–ï—â—ë" –¥–æ—Å—Ç—É–ø–Ω—ã –≤—Å–µ —Å–∫—Ä—ã—Ç—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏.
        </div>
      </div>
    </div>
  );
}